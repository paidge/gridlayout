@use 'sass:string';

// Display helpers

$d-helpers: (
  none,
  block,
  inline-block,
  flex,
  grid,
) !default;

@each $helper in $d-helpers {
    .d-#{$helper} {display: $helper;}
}
@each $breakpoint, $size in $grid-breakpoints {
    @media screen and (min-width:#{$size}){
        @each $helper in $d-helpers {
            .d-#{$breakpoint}-#{$helper} {display: $helper;}
        }
    }
}

// Rounded helpers
$default-round : 1rem !default;
$rounds : (
  0: 0,
  1: $default-round * .25,
  2: $default-round * .5,
  3: $default-round,
  4: $default-round * 1.5,
  5: $default-round * 3,
) !default;

@for $i from 0 through 5 {
    .round-#{$i} {
        border-radius: #{map-get($rounds, $i)};
    }
}
.round-circle {
    border-radius: 50%;
}

// Spacing helpers
$default-space : 1rem !default;
$spaces : (
  0: 0,
  1: $default-space * .25,
  2: $default-space * .5,
  3: $default-space,
  4: $default-space * 1.5,
  5: $default-space * 3,
) !default;

$properties: "margin", "padding";

@each $prop in $properties {
    $letter: string.slice($prop, 1, 1);

    @for $i from 0 through 5 {
        .#{$letter}-#{$i}, .#{$letter}x-#{$i}, .#{$letter}l-#{$i} {
            #{$prop}-left: #{map-get($spaces, $i)};
        }
    
        .#{$letter}-#{$i}, .#{$letter}x-#{$i}, .#{$letter}r-#{$i} {
            #{$prop}-right: #{map-get($spaces, $i)};
        }
    
        .#{$letter}-#{$i}, .#{$letter}y-#{$i}, .#{$letter}t-#{$i} {
            #{$prop}-top: #{map-get($spaces, $i)};
        }
    
        .#{$letter}-#{$i}, .#{$letter}y-#{$i}, .#{$letter}b-#{$i} {
            #{$prop}-bottom: #{map-get($spaces, $i)};
        }
    }
}

.m-auto, .mx-auto {
    margin-right: auto;
    margin-left: auto;
}

.m-auto, .my-auto {
    margin-top: auto;
    margin-bottom: auto;
}